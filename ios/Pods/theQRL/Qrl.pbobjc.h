// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qrl.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AddressAmount;
@class AddressState;
@class Block;
@class BlockDataPoint;
@class BlockHeader;
@class BlockHeaderExtended;
@class BlockMetaData;
@class EncryptedEphemeralMessage;
@class EncryptedEphemeralMessage_Channel;
@class EphemeralMetadata;
@class GenesisBalance;
@class LatticePK;
@class NodeInfo;
@class Peer;
@class Transaction;
@class TransactionCount;
@class TransactionExtended;
@class Transaction_CoinBase;
@class Transaction_LatticePublicKey;
@class Transaction_Message;
@class Transaction_Slave;
@class Transaction_Token;
@class Transaction_Transfer;
@class Transaction_TransferToken;
@class Wallet;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum GetLatestDataReq_Filter

typedef GPB_ENUM(GetLatestDataReq_Filter) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GetLatestDataReq_Filter_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GetLatestDataReq_Filter_All = 0,
  GetLatestDataReq_Filter_Blockheaders = 1,
  GetLatestDataReq_Filter_Transactions = 2,
  GetLatestDataReq_Filter_TransactionsUnconfirmed = 3,
};

GPBEnumDescriptor *GetLatestDataReq_Filter_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GetLatestDataReq_Filter_IsValidValue(int32_t value);

#pragma mark - Enum PushTransactionResp_ResponseCode

typedef GPB_ENUM(PushTransactionResp_ResponseCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PushTransactionResp_ResponseCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  PushTransactionResp_ResponseCode_Unknown = 0,
  PushTransactionResp_ResponseCode_Error = 1,
  PushTransactionResp_ResponseCode_ValidationFailed = 2,
  PushTransactionResp_ResponseCode_Submitted = 3,
};

GPBEnumDescriptor *PushTransactionResp_ResponseCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PushTransactionResp_ResponseCode_IsValidValue(int32_t value);

#pragma mark - Enum NodeInfo_State

typedef GPB_ENUM(NodeInfo_State) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  NodeInfo_State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  NodeInfo_State_Unknown = 0,
  NodeInfo_State_Unsynced = 1,
  NodeInfo_State_Syncing = 2,
  NodeInfo_State_Synced = 3,
  NodeInfo_State_Forked = 4,
};

GPBEnumDescriptor *NodeInfo_State_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL NodeInfo_State_IsValidValue(int32_t value);

#pragma mark - QrlRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface QrlRoot : GPBRootObject
@end

#pragma mark - Empty

@interface Empty : GPBMessage

@end

#pragma mark - PingReq

@interface PingReq : GPBMessage

@end

#pragma mark - PongResp

@interface PongResp : GPBMessage

@end

#pragma mark - GetNodeStateReq

@interface GetNodeStateReq : GPBMessage

@end

#pragma mark - GetNodeStateResp

typedef GPB_ENUM(GetNodeStateResp_FieldNumber) {
  GetNodeStateResp_FieldNumber_Info = 1,
};

@interface GetNodeStateResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NodeInfo *info;
/** Test to see if @c info has been set. */
@property(nonatomic, readwrite) BOOL hasInfo;

@end

#pragma mark - GetKnownPeersReq

@interface GetKnownPeersReq : GPBMessage

@end

#pragma mark - GetKnownPeersResp

typedef GPB_ENUM(GetKnownPeersResp_FieldNumber) {
  GetKnownPeersResp_FieldNumber_NodeInfo = 1,
  GetKnownPeersResp_FieldNumber_KnownPeersArray = 2,
};

@interface GetKnownPeersResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NodeInfo *nodeInfo;
/** Test to see if @c nodeInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNodeInfo;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Peer*> *knownPeersArray;
/** The number of items in @c knownPeersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger knownPeersArray_Count;

@end

#pragma mark - GetBlockReq

typedef GPB_ENUM(GetBlockReq_FieldNumber) {
  GetBlockReq_FieldNumber_Index = 1,
  GetBlockReq_FieldNumber_AfterHash = 2,
};

typedef GPB_ENUM(GetBlockReq_Query_OneOfCase) {
  GetBlockReq_Query_OneOfCase_GPBUnsetOneOfCase = 0,
  GetBlockReq_Query_OneOfCase_Index = 1,
  GetBlockReq_Query_OneOfCase_AfterHash = 2,
};

@interface GetBlockReq : GPBMessage

@property(nonatomic, readonly) GetBlockReq_Query_OneOfCase queryOneOfCase;

/** Indicates the index number in mainchain */
@property(nonatomic, readwrite) uint64_t index;

/** request the node that comes after hash */
@property(nonatomic, readwrite, copy, null_resettable) NSData *afterHash;

@end

/**
 * Clears whatever value was set for the oneof 'query'.
 **/
void GetBlockReq_ClearQueryOneOfCase(GetBlockReq *message);

#pragma mark - GetBlockResp

typedef GPB_ENUM(GetBlockResp_FieldNumber) {
  GetBlockResp_FieldNumber_NodeInfo = 1,
  GetBlockResp_FieldNumber_Block = 2,
};

@interface GetBlockResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NodeInfo *nodeInfo;
/** Test to see if @c nodeInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNodeInfo;

@property(nonatomic, readwrite, strong, null_resettable) Block *block;
/** Test to see if @c block has been set. */
@property(nonatomic, readwrite) BOOL hasBlock;

@end

#pragma mark - GetStatsReq

typedef GPB_ENUM(GetStatsReq_FieldNumber) {
  GetStatsReq_FieldNumber_IncludeTimeseries = 1,
};

@interface GetStatsReq : GPBMessage

@property(nonatomic, readwrite) BOOL includeTimeseries;

@end

#pragma mark - GetStatsResp

typedef GPB_ENUM(GetStatsResp_FieldNumber) {
  GetStatsResp_FieldNumber_NodeInfo = 1,
  GetStatsResp_FieldNumber_Epoch = 2,
  GetStatsResp_FieldNumber_UptimeNetwork = 3,
  GetStatsResp_FieldNumber_BlockLastReward = 4,
  GetStatsResp_FieldNumber_BlockTimeMean = 5,
  GetStatsResp_FieldNumber_BlockTimeSd = 6,
  GetStatsResp_FieldNumber_CoinsTotalSupply = 7,
  GetStatsResp_FieldNumber_CoinsEmitted = 8,
  GetStatsResp_FieldNumber_BlockTimeseriesArray = 9,
};

@interface GetStatsResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NodeInfo *nodeInfo;
/** Test to see if @c nodeInfo has been set. */
@property(nonatomic, readwrite) BOOL hasNodeInfo;

/** Current epoch */
@property(nonatomic, readwrite) uint64_t epoch;

/** Indicates uptime in seconds */
@property(nonatomic, readwrite) uint64_t uptimeNetwork;

@property(nonatomic, readwrite) uint64_t blockLastReward;

@property(nonatomic, readwrite) uint64_t blockTimeMean;

@property(nonatomic, readwrite) uint64_t blockTimeSd;

@property(nonatomic, readwrite) uint64_t coinsTotalSupply;

@property(nonatomic, readwrite) uint64_t coinsEmitted;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BlockDataPoint*> *blockTimeseriesArray;
/** The number of items in @c blockTimeseriesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blockTimeseriesArray_Count;

@end

#pragma mark - BlockDataPoint

typedef GPB_ENUM(BlockDataPoint_FieldNumber) {
  BlockDataPoint_FieldNumber_Number = 1,
  BlockDataPoint_FieldNumber_Difficulty = 2,
  BlockDataPoint_FieldNumber_Timestamp = 3,
  BlockDataPoint_FieldNumber_TimeLast = 4,
  BlockDataPoint_FieldNumber_TimeMovavg = 5,
  BlockDataPoint_FieldNumber_HashPower = 6,
  BlockDataPoint_FieldNumber_HeaderHash = 7,
  BlockDataPoint_FieldNumber_HeaderHashPrev = 8,
};

@interface BlockDataPoint : GPBMessage

@property(nonatomic, readwrite) uint64_t number;

@property(nonatomic, readwrite, copy, null_resettable) NSString *difficulty;

@property(nonatomic, readwrite) uint64_t timestamp;

@property(nonatomic, readwrite) uint64_t timeLast;

@property(nonatomic, readwrite) uint64_t timeMovavg;

@property(nonatomic, readwrite) float hashPower;

@property(nonatomic, readwrite, copy, null_resettable) NSData *headerHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *headerHashPrev;

@end

#pragma mark - GetAddressStateReq

typedef GPB_ENUM(GetAddressStateReq_FieldNumber) {
  GetAddressStateReq_FieldNumber_Address = 1,
};

@interface GetAddressStateReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@end

#pragma mark - GetAddressStateResp

typedef GPB_ENUM(GetAddressStateResp_FieldNumber) {
  GetAddressStateResp_FieldNumber_State = 1,
};

@interface GetAddressStateResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AddressState *state;
/** Test to see if @c state has been set. */
@property(nonatomic, readwrite) BOOL hasState;

@end

#pragma mark - GetObjectReq

typedef GPB_ENUM(GetObjectReq_FieldNumber) {
  GetObjectReq_FieldNumber_Query = 1,
};

@interface GetObjectReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *query;

@end

#pragma mark - GetObjectResp

typedef GPB_ENUM(GetObjectResp_FieldNumber) {
  GetObjectResp_FieldNumber_Found = 1,
  GetObjectResp_FieldNumber_AddressState = 2,
  GetObjectResp_FieldNumber_Transaction = 3,
  GetObjectResp_FieldNumber_Block = 4,
};

typedef GPB_ENUM(GetObjectResp_Result_OneOfCase) {
  GetObjectResp_Result_OneOfCase_GPBUnsetOneOfCase = 0,
  GetObjectResp_Result_OneOfCase_AddressState = 2,
  GetObjectResp_Result_OneOfCase_Transaction = 3,
  GetObjectResp_Result_OneOfCase_Block = 4,
};

@interface GetObjectResp : GPBMessage

@property(nonatomic, readwrite) BOOL found;

@property(nonatomic, readonly) GetObjectResp_Result_OneOfCase resultOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) AddressState *addressState;

@property(nonatomic, readwrite, strong, null_resettable) TransactionExtended *transaction;

@property(nonatomic, readwrite, strong, null_resettable) Block *block;

@end

/**
 * Clears whatever value was set for the oneof 'result'.
 **/
void GetObjectResp_ClearResultOneOfCase(GetObjectResp *message);

#pragma mark - GetLatestDataReq

typedef GPB_ENUM(GetLatestDataReq_FieldNumber) {
  GetLatestDataReq_FieldNumber_Filter = 1,
  GetLatestDataReq_FieldNumber_Offset = 2,
  GetLatestDataReq_FieldNumber_Quantity = 3,
};

@interface GetLatestDataReq : GPBMessage

@property(nonatomic, readwrite) GetLatestDataReq_Filter filter;

/** Offset in the result list (works backwards in this case) */
@property(nonatomic, readwrite) uint32_t offset;

/** Number of items to retrive. Capped at 100 */
@property(nonatomic, readwrite) uint32_t quantity;

@end

/**
 * Fetches the raw value of a @c GetLatestDataReq's @c filter property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GetLatestDataReq_Filter_RawValue(GetLatestDataReq *message);
/**
 * Sets the raw value of an @c GetLatestDataReq's @c filter property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGetLatestDataReq_Filter_RawValue(GetLatestDataReq *message, int32_t value);

#pragma mark - GetLatestDataResp

typedef GPB_ENUM(GetLatestDataResp_FieldNumber) {
  GetLatestDataResp_FieldNumber_BlockheadersArray = 1,
  GetLatestDataResp_FieldNumber_TransactionsArray = 2,
  GetLatestDataResp_FieldNumber_TransactionsUnconfirmedArray = 3,
};

@interface GetLatestDataResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BlockHeaderExtended*> *blockheadersArray;
/** The number of items in @c blockheadersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blockheadersArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TransactionExtended*> *transactionsArray;
/** The number of items in @c transactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TransactionExtended*> *transactionsUnconfirmedArray;
/** The number of items in @c transactionsUnconfirmedArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionsUnconfirmedArray_Count;

@end

#pragma mark - TransferCoinsReq

typedef GPB_ENUM(TransferCoinsReq_FieldNumber) {
  TransferCoinsReq_FieldNumber_AddressFrom = 1,
  TransferCoinsReq_FieldNumber_AddressTo = 2,
  TransferCoinsReq_FieldNumber_Amount = 3,
  TransferCoinsReq_FieldNumber_Fee = 4,
  TransferCoinsReq_FieldNumber_XmssPk = 5,
};

@interface TransferCoinsReq : GPBMessage

/** Transaction source address */
@property(nonatomic, readwrite, copy, null_resettable) NSData *addressFrom;

/** Transaction destination address */
@property(nonatomic, readwrite, copy, null_resettable) NSData *addressTo;

/** Amount. It should be expressed in Shor */
@property(nonatomic, readwrite) uint64_t amount;

/** Fee. It should be expressed in Shor */
@property(nonatomic, readwrite) uint64_t fee;

/** XMSS Public key */
@property(nonatomic, readwrite, copy, null_resettable) NSData *xmssPk;

@end

#pragma mark - TransferCoinsResp

typedef GPB_ENUM(TransferCoinsResp_FieldNumber) {
  TransferCoinsResp_FieldNumber_TransactionUnsigned = 1,
};

@interface TransferCoinsResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Transaction *transactionUnsigned;
/** Test to see if @c transactionUnsigned has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionUnsigned;

@end

#pragma mark - PushTransactionReq

typedef GPB_ENUM(PushTransactionReq_FieldNumber) {
  PushTransactionReq_FieldNumber_TransactionSigned = 1,
};

@interface PushTransactionReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Transaction *transactionSigned;
/** Test to see if @c transactionSigned has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionSigned;

@end

#pragma mark - PushTransactionResp

typedef GPB_ENUM(PushTransactionResp_FieldNumber) {
  PushTransactionResp_FieldNumber_ErrorCode = 1,
  PushTransactionResp_FieldNumber_ErrorDescription = 2,
  PushTransactionResp_FieldNumber_TxHash = 3,
};

@interface PushTransactionResp : GPBMessage

@property(nonatomic, readwrite) PushTransactionResp_ResponseCode errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorDescription;

@property(nonatomic, readwrite, copy, null_resettable) NSData *txHash;

@end

/**
 * Fetches the raw value of a @c PushTransactionResp's @c errorCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PushTransactionResp_ErrorCode_RawValue(PushTransactionResp *message);
/**
 * Sets the raw value of an @c PushTransactionResp's @c errorCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPushTransactionResp_ErrorCode_RawValue(PushTransactionResp *message, int32_t value);

#pragma mark - TokenTxnReq

typedef GPB_ENUM(TokenTxnReq_FieldNumber) {
  TokenTxnReq_FieldNumber_AddressFrom = 1,
  TokenTxnReq_FieldNumber_Symbol = 2,
  TokenTxnReq_FieldNumber_Name = 3,
  TokenTxnReq_FieldNumber_Owner = 4,
  TokenTxnReq_FieldNumber_Decimals = 5,
  TokenTxnReq_FieldNumber_InitialBalancesArray = 6,
  TokenTxnReq_FieldNumber_Fee = 7,
  TokenTxnReq_FieldNumber_XmssPk = 8,
};

@interface TokenTxnReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *addressFrom;

@property(nonatomic, readwrite, copy, null_resettable) NSData *symbol;

@property(nonatomic, readwrite, copy, null_resettable) NSData *name;

@property(nonatomic, readwrite, copy, null_resettable) NSData *owner;

@property(nonatomic, readwrite) uint64_t decimals;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AddressAmount*> *initialBalancesArray;
/** The number of items in @c initialBalancesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger initialBalancesArray_Count;

@property(nonatomic, readwrite) uint64_t fee;

@property(nonatomic, readwrite, copy, null_resettable) NSData *xmssPk;

@end

#pragma mark - TransferTokenTxnReq

typedef GPB_ENUM(TransferTokenTxnReq_FieldNumber) {
  TransferTokenTxnReq_FieldNumber_AddressFrom = 1,
  TransferTokenTxnReq_FieldNumber_AddressTo = 2,
  TransferTokenTxnReq_FieldNumber_TokenTxhash = 3,
  TransferTokenTxnReq_FieldNumber_Amount = 4,
  TransferTokenTxnReq_FieldNumber_Fee = 5,
  TransferTokenTxnReq_FieldNumber_XmssPk = 6,
};

@interface TransferTokenTxnReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *addressFrom;

@property(nonatomic, readwrite, copy, null_resettable) NSData *addressTo;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tokenTxhash;

@property(nonatomic, readwrite) uint64_t amount;

@property(nonatomic, readwrite) uint64_t fee;

@property(nonatomic, readwrite, copy, null_resettable) NSData *xmssPk;

@end

#pragma mark - SlaveTxnReq

typedef GPB_ENUM(SlaveTxnReq_FieldNumber) {
  SlaveTxnReq_FieldNumber_AddressFrom = 1,
  SlaveTxnReq_FieldNumber_SlavePksArray = 2,
  SlaveTxnReq_FieldNumber_AccessTypesArray = 3,
  SlaveTxnReq_FieldNumber_Fee = 4,
  SlaveTxnReq_FieldNumber_XmssPk = 5,
};

@interface SlaveTxnReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *addressFrom;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *slavePksArray;
/** The number of items in @c slavePksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger slavePksArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *accessTypesArray;
/** The number of items in @c accessTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accessTypesArray_Count;

@property(nonatomic, readwrite) uint64_t fee;

@property(nonatomic, readwrite, copy, null_resettable) NSData *xmssPk;

@end

#pragma mark - LatticePublicKeyTxnReq

typedef GPB_ENUM(LatticePublicKeyTxnReq_FieldNumber) {
  LatticePublicKeyTxnReq_FieldNumber_AddressFrom = 1,
  LatticePublicKeyTxnReq_FieldNumber_KyberPk = 2,
  LatticePublicKeyTxnReq_FieldNumber_DilithiumPk = 3,
  LatticePublicKeyTxnReq_FieldNumber_Fee = 4,
  LatticePublicKeyTxnReq_FieldNumber_XmssPk = 5,
};

@interface LatticePublicKeyTxnReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *addressFrom;

@property(nonatomic, readwrite, copy, null_resettable) NSData *kyberPk;

@property(nonatomic, readwrite, copy, null_resettable) NSData *dilithiumPk;

@property(nonatomic, readwrite) uint64_t fee;

@property(nonatomic, readwrite, copy, null_resettable) NSData *xmssPk;

@end

#pragma mark - GetLocalAddressesReq

@interface GetLocalAddressesReq : GPBMessage

@end

#pragma mark - GetLocalAddressesResp

typedef GPB_ENUM(GetLocalAddressesResp_FieldNumber) {
  GetLocalAddressesResp_FieldNumber_AddressesArray = 1,
};

@interface GetLocalAddressesResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *addressesArray;
/** The number of items in @c addressesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addressesArray_Count;

@end

#pragma mark - GetWalletReq

typedef GPB_ENUM(GetWalletReq_FieldNumber) {
  GetWalletReq_FieldNumber_Address = 1,
};

@interface GetWalletReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@end

#pragma mark - GetWalletResp

typedef GPB_ENUM(GetWalletResp_FieldNumber) {
  GetWalletResp_FieldNumber_Wallet = 1,
};

@interface GetWalletResp : GPBMessage

/** FIXME: Encrypt */
@property(nonatomic, readwrite, strong, null_resettable) Wallet *wallet;
/** Test to see if @c wallet has been set. */
@property(nonatomic, readwrite) BOOL hasWallet;

@end

#pragma mark - NodeInfo

typedef GPB_ENUM(NodeInfo_FieldNumber) {
  NodeInfo_FieldNumber_Version = 1,
  NodeInfo_FieldNumber_State = 2,
  NodeInfo_FieldNumber_NumConnections = 3,
  NodeInfo_FieldNumber_NumKnownPeers = 4,
  NodeInfo_FieldNumber_Uptime = 5,
  NodeInfo_FieldNumber_BlockHeight = 6,
  NodeInfo_FieldNumber_BlockLastHash = 7,
  NodeInfo_FieldNumber_NetworkId = 8,
};

@interface NodeInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@property(nonatomic, readwrite) NodeInfo_State state;

@property(nonatomic, readwrite) uint32_t numConnections;

@property(nonatomic, readwrite) uint32_t numKnownPeers;

/** Uptime in seconds */
@property(nonatomic, readwrite) uint64_t uptime;

@property(nonatomic, readwrite) uint64_t blockHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSData *blockLastHash;

@property(nonatomic, readwrite, copy, null_resettable) NSString *networkId;

@end

/**
 * Fetches the raw value of a @c NodeInfo's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t NodeInfo_State_RawValue(NodeInfo *message);
/**
 * Sets the raw value of an @c NodeInfo's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetNodeInfo_State_RawValue(NodeInfo *message, int32_t value);

#pragma mark - WalletStore

typedef GPB_ENUM(WalletStore_FieldNumber) {
  WalletStore_FieldNumber_WalletsArray = 1,
};

@interface WalletStore : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Wallet*> *walletsArray;
/** The number of items in @c walletsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger walletsArray_Count;

@end

#pragma mark - Wallet

typedef GPB_ENUM(Wallet_FieldNumber) {
  Wallet_FieldNumber_Address = 1,
  Wallet_FieldNumber_Mnemonic = 2,
  Wallet_FieldNumber_XmssIndex = 3,
};

@interface Wallet : GPBMessage

/** FIXME move to bytes */
@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mnemonic;

@property(nonatomic, readwrite) int32_t xmssIndex;

@end

#pragma mark - StoredPeers

typedef GPB_ENUM(StoredPeers_FieldNumber) {
  StoredPeers_FieldNumber_PeersArray = 1,
};

@interface StoredPeers : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Peer*> *peersArray;
/** The number of items in @c peersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger peersArray_Count;

@end

#pragma mark - Peer

typedef GPB_ENUM(Peer_FieldNumber) {
  Peer_FieldNumber_Ip = 1,
};

@interface Peer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;

@end

#pragma mark - AddressState

typedef GPB_ENUM(AddressState_FieldNumber) {
  AddressState_FieldNumber_Address = 1,
  AddressState_FieldNumber_Balance = 2,
  AddressState_FieldNumber_Nonce = 3,
  AddressState_FieldNumber_OtsBitfieldArray = 4,
  AddressState_FieldNumber_TransactionHashesArray = 5,
  AddressState_FieldNumber_Tokens = 6,
  AddressState_FieldNumber_LatticePkListArray = 7,
  AddressState_FieldNumber_SlavePksAccessType = 8,
  AddressState_FieldNumber_OtsCounter = 9,
};

@interface AddressState : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@property(nonatomic, readwrite) uint64_t balance;

/** FIXME: Discuss. 32 or 64 bits? */
@property(nonatomic, readwrite) uint64_t nonce;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *otsBitfieldArray;
/** The number of items in @c otsBitfieldArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger otsBitfieldArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *transactionHashesArray;
/** The number of items in @c transactionHashesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionHashesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringUInt64Dictionary *tokens;
/** The number of items in @c tokens without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokens_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LatticePK*> *latticePkListArray;
/** The number of items in @c latticePkListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger latticePkListArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBStringUInt32Dictionary *slavePksAccessType;
/** The number of items in @c slavePksAccessType without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger slavePksAccessType_Count;

@property(nonatomic, readwrite) uint64_t otsCounter;

@end

#pragma mark - LatticePK

typedef GPB_ENUM(LatticePK_FieldNumber) {
  LatticePK_FieldNumber_Txhash = 1,
  LatticePK_FieldNumber_DilithiumPk = 2,
  LatticePK_FieldNumber_KyberPk = 3,
};

@interface LatticePK : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *txhash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *dilithiumPk;

@property(nonatomic, readwrite, copy, null_resettable) NSData *kyberPk;

@end

#pragma mark - AddressAmount

typedef GPB_ENUM(AddressAmount_FieldNumber) {
  AddressAmount_FieldNumber_Address = 1,
  AddressAmount_FieldNumber_Amount = 2,
};

@interface AddressAmount : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@property(nonatomic, readwrite) uint64_t amount;

@end

#pragma mark - BlockHeader

typedef GPB_ENUM(BlockHeader_FieldNumber) {
  BlockHeader_FieldNumber_HashHeader = 1,
  BlockHeader_FieldNumber_BlockNumber = 2,
  BlockHeader_FieldNumber_TimestampSeconds = 3,
  BlockHeader_FieldNumber_HashHeaderPrev = 4,
  BlockHeader_FieldNumber_RewardBlock = 5,
  BlockHeader_FieldNumber_RewardFee = 6,
  BlockHeader_FieldNumber_MerkleRoot = 7,
  BlockHeader_FieldNumber_Pk = 8,
  BlockHeader_FieldNumber_MiningNonce = 9,
};

@interface BlockHeader : GPBMessage

/** Header */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hashHeader;

@property(nonatomic, readwrite) uint64_t blockNumber;

@property(nonatomic, readwrite) uint64_t timestampSeconds;

@property(nonatomic, readwrite, copy, null_resettable) NSData *hashHeaderPrev;

@property(nonatomic, readwrite) uint64_t rewardBlock;

@property(nonatomic, readwrite) uint64_t rewardFee;

@property(nonatomic, readwrite, copy, null_resettable) NSData *merkleRoot;

@property(nonatomic, readwrite, copy, null_resettable) NSData *pk;

@property(nonatomic, readwrite) uint64_t miningNonce;

@end

#pragma mark - BlockHeaderExtended

typedef GPB_ENUM(BlockHeaderExtended_FieldNumber) {
  BlockHeaderExtended_FieldNumber_Header = 1,
  BlockHeaderExtended_FieldNumber_TransactionCount = 2,
};

@interface BlockHeaderExtended : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BlockHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) TransactionCount *transactionCount;
/** Test to see if @c transactionCount has been set. */
@property(nonatomic, readwrite) BOOL hasTransactionCount;

@end

#pragma mark - TransactionCount

typedef GPB_ENUM(TransactionCount_FieldNumber) {
  TransactionCount_FieldNumber_Count = 1,
};

@interface TransactionCount : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32UInt32Dictionary *count;
/** The number of items in @c count without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger count_Count;

@end

#pragma mark - TransactionExtended

typedef GPB_ENUM(TransactionExtended_FieldNumber) {
  TransactionExtended_FieldNumber_Header = 1,
  TransactionExtended_FieldNumber_Tx = 2,
};

@interface TransactionExtended : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BlockHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) Transaction *tx;
/** Test to see if @c tx has been set. */
@property(nonatomic, readwrite) BOOL hasTx;

@end

#pragma mark - Block

typedef GPB_ENUM(Block_FieldNumber) {
  Block_FieldNumber_Header = 1,
  Block_FieldNumber_TransactionsArray = 2,
  Block_FieldNumber_GenesisBalanceArray = 3,
};

@interface Block : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BlockHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Transaction*> *transactionsArray;
/** The number of items in @c transactionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transactionsArray_Count;

/** This is only applicable to genesis blocks */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GenesisBalance*> *genesisBalanceArray;
/** The number of items in @c genesisBalanceArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger genesisBalanceArray_Count;

@end

#pragma mark - GenesisBalance

typedef GPB_ENUM(GenesisBalance_FieldNumber) {
  GenesisBalance_FieldNumber_Address = 1,
  GenesisBalance_FieldNumber_Balance = 2,
};

@interface GenesisBalance : GPBMessage

/** Address is string only here to increase visibility */
@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@property(nonatomic, readwrite) uint64_t balance;

@end

#pragma mark - BlockMetaDataList

typedef GPB_ENUM(BlockMetaDataList_FieldNumber) {
  BlockMetaDataList_FieldNumber_BlockNumberHashesArray = 1,
};

@interface BlockMetaDataList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BlockMetaData*> *blockNumberHashesArray;
/** The number of items in @c blockNumberHashesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger blockNumberHashesArray_Count;

@end

#pragma mark - Transaction

typedef GPB_ENUM(Transaction_FieldNumber) {
  Transaction_FieldNumber_AddrFrom = 1,
  Transaction_FieldNumber_Fee = 2,
  Transaction_FieldNumber_PublicKey = 3,
  Transaction_FieldNumber_Signature = 4,
  Transaction_FieldNumber_Nonce = 5,
  Transaction_FieldNumber_TransactionHash = 6,
  Transaction_FieldNumber_Transfer = 7,
  Transaction_FieldNumber_Coinbase = 8,
  Transaction_FieldNumber_LatticePk = 9,
  Transaction_FieldNumber_Message = 10,
  Transaction_FieldNumber_Token = 11,
  Transaction_FieldNumber_TransferToken = 12,
  Transaction_FieldNumber_Slave = 13,
};

typedef GPB_ENUM(Transaction_TransactionType_OneOfCase) {
  Transaction_TransactionType_OneOfCase_GPBUnsetOneOfCase = 0,
  Transaction_TransactionType_OneOfCase_Transfer = 7,
  Transaction_TransactionType_OneOfCase_Coinbase = 8,
  Transaction_TransactionType_OneOfCase_LatticePk = 9,
  Transaction_TransactionType_OneOfCase_Message = 10,
  Transaction_TransactionType_OneOfCase_Token = 11,
  Transaction_TransactionType_OneOfCase_TransferToken = 12,
  Transaction_TransactionType_OneOfCase_Slave = 13,
};

@interface Transaction : GPBMessage

/** FIXME: we probably do not need this */
@property(nonatomic, readwrite, copy, null_resettable) NSData *addrFrom;

@property(nonatomic, readwrite) uint64_t fee;

@property(nonatomic, readwrite, copy, null_resettable) NSData *publicKey;

@property(nonatomic, readwrite, copy, null_resettable) NSData *signature;

@property(nonatomic, readwrite) uint64_t nonce;

@property(nonatomic, readwrite, copy, null_resettable) NSData *transactionHash;

@property(nonatomic, readonly) Transaction_TransactionType_OneOfCase transactionTypeOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_Transfer *transfer;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_CoinBase *coinbase;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_LatticePublicKey *latticePk;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_Message *message;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_Token *token;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_TransferToken *transferToken;

@property(nonatomic, readwrite, strong, null_resettable) Transaction_Slave *slave;

@end

/**
 * Clears whatever value was set for the oneof 'transactionType'.
 **/
void Transaction_ClearTransactionTypeOneOfCase(Transaction *message);

#pragma mark - Transaction_Transfer

typedef GPB_ENUM(Transaction_Transfer_FieldNumber) {
  Transaction_Transfer_FieldNumber_AddrTo = 1,
  Transaction_Transfer_FieldNumber_Amount = 2,
};

/**
 * ////////
 **/
@interface Transaction_Transfer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *addrTo;

@property(nonatomic, readwrite) uint64_t amount;

@end

#pragma mark - Transaction_CoinBase

typedef GPB_ENUM(Transaction_CoinBase_FieldNumber) {
  Transaction_CoinBase_FieldNumber_AddrTo = 1,
  Transaction_CoinBase_FieldNumber_Amount = 2,
  Transaction_CoinBase_FieldNumber_BlockNumber = 3,
  Transaction_CoinBase_FieldNumber_Headerhash = 4,
};

@interface Transaction_CoinBase : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *addrTo;

@property(nonatomic, readwrite) uint64_t amount;

@property(nonatomic, readwrite) uint64_t blockNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSData *headerhash;

@end

#pragma mark - Transaction_LatticePublicKey

typedef GPB_ENUM(Transaction_LatticePublicKey_FieldNumber) {
  Transaction_LatticePublicKey_FieldNumber_KyberPk = 1,
  Transaction_LatticePublicKey_FieldNumber_DilithiumPk = 2,
};

@interface Transaction_LatticePublicKey : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *kyberPk;

@property(nonatomic, readwrite, copy, null_resettable) NSData *dilithiumPk;

@end

#pragma mark - Transaction_Message

typedef GPB_ENUM(Transaction_Message_FieldNumber) {
  Transaction_Message_FieldNumber_MessageHash = 1,
};

@interface Transaction_Message : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *messageHash;

@end

#pragma mark - Transaction_Token

typedef GPB_ENUM(Transaction_Token_FieldNumber) {
  Transaction_Token_FieldNumber_Symbol = 1,
  Transaction_Token_FieldNumber_Name = 2,
  Transaction_Token_FieldNumber_Owner = 3,
  Transaction_Token_FieldNumber_Decimals = 4,
  Transaction_Token_FieldNumber_InitialBalancesArray = 5,
};

@interface Transaction_Token : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *symbol;

@property(nonatomic, readwrite, copy, null_resettable) NSData *name;

@property(nonatomic, readwrite, copy, null_resettable) NSData *owner;

@property(nonatomic, readwrite) uint64_t decimals;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<AddressAmount*> *initialBalancesArray;
/** The number of items in @c initialBalancesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger initialBalancesArray_Count;

@end

#pragma mark - Transaction_TransferToken

typedef GPB_ENUM(Transaction_TransferToken_FieldNumber) {
  Transaction_TransferToken_FieldNumber_TokenTxhash = 1,
  Transaction_TransferToken_FieldNumber_AddrTo = 2,
  Transaction_TransferToken_FieldNumber_Amount = 3,
};

@interface Transaction_TransferToken : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *tokenTxhash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *addrTo;

@property(nonatomic, readwrite) uint64_t amount;

@end

#pragma mark - Transaction_Slave

typedef GPB_ENUM(Transaction_Slave_FieldNumber) {
  Transaction_Slave_FieldNumber_SlavePksArray = 1,
  Transaction_Slave_FieldNumber_AccessTypesArray = 2,
};

@interface Transaction_Slave : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *slavePksArray;
/** The number of items in @c slavePksArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger slavePksArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *accessTypesArray;
/** The number of items in @c accessTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger accessTypesArray_Count;

@end

#pragma mark - TokenList

typedef GPB_ENUM(TokenList_FieldNumber) {
  TokenList_FieldNumber_TokenTxhashArray = 1,
};

@interface TokenList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *tokenTxhashArray;
/** The number of items in @c tokenTxhashArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokenTxhashArray_Count;

@end

#pragma mark - TokenDetailedList

typedef GPB_ENUM(TokenDetailedList_FieldNumber) {
  TokenDetailedList_FieldNumber_TokensArray = 1,
};

@interface TokenDetailedList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Transaction*> *tokensArray;
/** The number of items in @c tokensArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokensArray_Count;

@end

#pragma mark - TokenMetadata

typedef GPB_ENUM(TokenMetadata_FieldNumber) {
  TokenMetadata_FieldNumber_TokenTxhash = 1,
  TokenMetadata_FieldNumber_TransferTokenTxHashesArray = 2,
};

@interface TokenMetadata : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *tokenTxhash;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *transferTokenTxHashesArray;
/** The number of items in @c transferTokenTxHashesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transferTokenTxHashesArray_Count;

@end

#pragma mark - CollectEphemeralMessageReq

typedef GPB_ENUM(CollectEphemeralMessageReq_FieldNumber) {
  CollectEphemeralMessageReq_FieldNumber_MsgId = 1,
};

@interface CollectEphemeralMessageReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *msgId;

@end

#pragma mark - CollectEphemeralMessageResp

typedef GPB_ENUM(CollectEphemeralMessageResp_FieldNumber) {
  CollectEphemeralMessageResp_FieldNumber_EphemeralMetadata = 1,
};

@interface CollectEphemeralMessageResp : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) EphemeralMetadata *ephemeralMetadata;
/** Test to see if @c ephemeralMetadata has been set. */
@property(nonatomic, readwrite) BOOL hasEphemeralMetadata;

@end

#pragma mark - PushEphemeralMessageReq

typedef GPB_ENUM(PushEphemeralMessageReq_FieldNumber) {
  PushEphemeralMessageReq_FieldNumber_EphemeralMessage = 1,
};

@interface PushEphemeralMessageReq : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) EncryptedEphemeralMessage *ephemeralMessage;
/** Test to see if @c ephemeralMessage has been set. */
@property(nonatomic, readwrite) BOOL hasEphemeralMessage;

@end

#pragma mark - EncryptedEphemeralMessage

typedef GPB_ENUM(EncryptedEphemeralMessage_FieldNumber) {
  EncryptedEphemeralMessage_FieldNumber_MsgId = 1,
  EncryptedEphemeralMessage_FieldNumber_Ttl = 2,
  EncryptedEphemeralMessage_FieldNumber_Ttr = 3,
  EncryptedEphemeralMessage_FieldNumber_Channel = 5,
  EncryptedEphemeralMessage_FieldNumber_Nonce = 6,
  EncryptedEphemeralMessage_FieldNumber_Payload = 7,
};

@interface EncryptedEphemeralMessage : GPBMessage

/** b'NEW' or PRF */
@property(nonatomic, readwrite, copy, null_resettable) NSData *msgId;

/** Expiry Timestamp in seconds */
@property(nonatomic, readwrite) uint64_t ttl;

/** Time to relay */
@property(nonatomic, readwrite) uint64_t ttr;

@property(nonatomic, readwrite, strong, null_resettable) EncryptedEphemeralMessage_Channel *channel;
/** Test to see if @c channel has been set. */
@property(nonatomic, readwrite) BOOL hasChannel;

/** nonce */
@property(nonatomic, readwrite) uint64_t nonce;

/** JSON content, encrypted by aes256_symkey */
@property(nonatomic, readwrite, copy, null_resettable) NSData *payload;

@end

#pragma mark - EncryptedEphemeralMessage_Channel

typedef GPB_ENUM(EncryptedEphemeralMessage_Channel_FieldNumber) {
  EncryptedEphemeralMessage_Channel_FieldNumber_EncAes256Symkey = 4,
};

@interface EncryptedEphemeralMessage_Channel : GPBMessage

/** aes256_symkey encrypted by kyber */
@property(nonatomic, readwrite, copy, null_resettable) NSData *encAes256Symkey;

@end

#pragma mark - EphemeralChannelPayload

typedef GPB_ENUM(EphemeralChannelPayload_FieldNumber) {
  EphemeralChannelPayload_FieldNumber_Prf512Seed = 1,
  EphemeralChannelPayload_FieldNumber_DilithiumSignature = 2,
  EphemeralChannelPayload_FieldNumber_AddrFrom = 3,
  EphemeralChannelPayload_FieldNumber_Data_p = 4,
};

@interface EphemeralChannelPayload : GPBMessage

/** PRF512 seed used for further communication after channel established */
@property(nonatomic, readwrite, copy, null_resettable) NSData *prf512Seed;

/** Sign hash of (msg_id, ttl, enc_aes256_symkey, prf512_seed, addr_from, */
@property(nonatomic, readwrite, copy, null_resettable) NSData *dilithiumSignature;

/** data) */
@property(nonatomic, readwrite, copy, null_resettable) NSData *addrFrom;

/** Could be anything, plain-text, binary, JSON etc. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - EphemeralMessagePayload

typedef GPB_ENUM(EphemeralMessagePayload_FieldNumber) {
  EphemeralMessagePayload_FieldNumber_AddrFrom = 1,
  EphemeralMessagePayload_FieldNumber_Data_p = 2,
};

@interface EphemeralMessagePayload : GPBMessage

/** Sender address */
@property(nonatomic, readwrite, copy, null_resettable) NSData *addrFrom;

/** Could be anything, plain-text, binary, JSON etc. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - LatticePublicKeys

typedef GPB_ENUM(LatticePublicKeys_FieldNumber) {
  LatticePublicKeys_FieldNumber_LatticeKeysArray = 1,
};

@interface LatticePublicKeys : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Transaction*> *latticeKeysArray;
/** The number of items in @c latticeKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger latticeKeysArray_Count;

@end

#pragma mark - EphemeralMetadata

typedef GPB_ENUM(EphemeralMetadata_FieldNumber) {
  EphemeralMetadata_FieldNumber_EncryptedEphemeralMessageListArray = 2,
};

@interface EphemeralMetadata : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EncryptedEphemeralMessage*> *encryptedEphemeralMessageListArray;
/** The number of items in @c encryptedEphemeralMessageListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger encryptedEphemeralMessageListArray_Count;

@end

#pragma mark - AddressList

typedef GPB_ENUM(AddressList_FieldNumber) {
  AddressList_FieldNumber_AddressesArray = 1,
};

@interface AddressList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *addressesArray;
/** The number of items in @c addressesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addressesArray_Count;

@end

#pragma mark - BlockHeightData

typedef GPB_ENUM(BlockHeightData_FieldNumber) {
  BlockHeightData_FieldNumber_BlockNumber = 1,
  BlockHeightData_FieldNumber_BlockHeaderhash = 2,
  BlockHeightData_FieldNumber_CumulativeDifficulty = 3,
};

@interface BlockHeightData : GPBMessage

@property(nonatomic, readwrite) uint64_t blockNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSData *blockHeaderhash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *cumulativeDifficulty;

@end

#pragma mark - BlockMetaData

typedef GPB_ENUM(BlockMetaData_FieldNumber) {
  BlockMetaData_FieldNumber_IsOrphan = 1,
  BlockMetaData_FieldNumber_BlockDifficulty = 2,
  BlockMetaData_FieldNumber_CumulativeDifficulty = 3,
  BlockMetaData_FieldNumber_ChildHeaderhashesArray = 4,
  BlockMetaData_FieldNumber_LastNHeaderhashesArray = 5,
};

@interface BlockMetaData : GPBMessage

@property(nonatomic, readwrite) BOOL isOrphan;

@property(nonatomic, readwrite, copy, null_resettable) NSData *blockDifficulty;

@property(nonatomic, readwrite, copy, null_resettable) NSData *cumulativeDifficulty;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *childHeaderhashesArray;
/** The number of items in @c childHeaderhashesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger childHeaderhashesArray_Count;

/** Keeps last N headerhashes, for measurement of timestamp difference */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *lastNHeaderhashesArray;
/** The number of items in @c lastNHeaderhashesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger lastNHeaderhashesArray_Count;

@end

#pragma mark - BlockNumberMapping

typedef GPB_ENUM(BlockNumberMapping_FieldNumber) {
  BlockNumberMapping_FieldNumber_Headerhash = 1,
  BlockNumberMapping_FieldNumber_PrevHeaderhash = 2,
};

@interface BlockNumberMapping : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *headerhash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *prevHeaderhash;

@end

#pragma mark - StateLoader

typedef GPB_ENUM(StateLoader_FieldNumber) {
  StateLoader_FieldNumber_AddressesArray = 1,
  StateLoader_FieldNumber_TokenTxhashArray = 2,
  StateLoader_FieldNumber_TxhashArray = 3,
  StateLoader_FieldNumber_TotalCoinSupply = 4,
};

@interface StateLoader : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *addressesArray;
/** The number of items in @c addressesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addressesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *tokenTxhashArray;
/** The number of items in @c tokenTxhashArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tokenTxhashArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *txhashArray;
/** The number of items in @c txhashArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger txhashArray_Count;

@property(nonatomic, readwrite) uint64_t totalCoinSupply;

@end

#pragma mark - StateObjects

typedef GPB_ENUM(StateObjects_FieldNumber) {
  StateObjects_FieldNumber_StateLoadersArray = 1,
};

@interface StateObjects : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *stateLoadersArray;
/** The number of items in @c stateLoadersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stateLoadersArray_Count;

@end

#pragma mark - LRUStateCache

@interface LRUStateCache : GPBMessage

@end

#pragma mark - NodeChainState

typedef GPB_ENUM(NodeChainState_FieldNumber) {
  NodeChainState_FieldNumber_BlockNumber = 1,
  NodeChainState_FieldNumber_HeaderHash = 2,
  NodeChainState_FieldNumber_CumulativeDifficulty = 3,
  NodeChainState_FieldNumber_Timestamp = 4,
};

@interface NodeChainState : GPBMessage

@property(nonatomic, readwrite) uint64_t blockNumber;

@property(nonatomic, readwrite, copy, null_resettable) NSData *headerHash;

@property(nonatomic, readwrite, copy, null_resettable) NSData *cumulativeDifficulty;

@property(nonatomic, readwrite) uint64_t timestamp;

@end

#pragma mark - NodeHeaderHash

typedef GPB_ENUM(NodeHeaderHash_FieldNumber) {
  NodeHeaderHash_FieldNumber_BlockNumber = 1,
  NodeHeaderHash_FieldNumber_HeaderhashesArray = 2,
};

@interface NodeHeaderHash : GPBMessage

@property(nonatomic, readwrite) uint64_t blockNumber;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *headerhashesArray;
/** The number of items in @c headerhashesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger headerhashesArray_Count;

@end

#pragma mark - P2PAcknowledgement

typedef GPB_ENUM(P2PAcknowledgement_FieldNumber) {
  P2PAcknowledgement_FieldNumber_BytesProcessed = 1,
};

@interface P2PAcknowledgement : GPBMessage

@property(nonatomic, readwrite) uint32_t bytesProcessed;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
